# Generated by Django 4.2.7 on 2023-11-19 12:53

from django.db import migrations, models
import django.db.models.deletion
import enumfields.fields
import training.enums


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('muscle', '0001_initial'),
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('explanation', models.TextField()),
                ('calculate_in', enumfields.fields.EnumField(enum=training.enums.CalculatedIn, max_length=3)),
                ('animation', models.URLField()),
                ('muscle', models.ManyToManyField(help_text='to show what muscles were involve in this exercise, could be more than 1', to='muscle.muscle')),
                ('muscle_category', models.ManyToManyField(help_text='to show what muscle categories is this excercise belong to, could be more than 1', to='muscle.musclecategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PresetTrainingSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('level', enumfields.fields.EnumField(enum=training.enums.TrainingLevel, max_length=3)),
                ('muscle_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='muscle.musclecategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PresetTrainingExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('calculate_in', enumfields.fields.EnumField(enum=training.enums.CalculatedIn, max_length=3)),
                ('required_value', models.PositiveIntegerField()),
                ('level', enumfields.fields.EnumField(enum=training.enums.TrainingLevel, max_length=3)),
                ('order', models.PositiveIntegerField(help_text='to show the order of each exersice in a training set')),
                ('belong_to_training_set', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='training.presettrainingset')),
                ('exercise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='training.exercise')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomTrainingSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('status', enumfields.fields.EnumField(enum=training.enums.TrainingStatus, max_length=3)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('valid_till', models.DateTimeField()),
                ('type', enumfields.fields.EnumField(enum=training.enums.TrainingType, help_text='to indicate if this training set is created base on our preset Training set or user custom training set', max_length=3)),
                ('muscle_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='muscle.musclecategory')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomTrainingExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('calculate_in', enumfields.fields.EnumField(enum=training.enums.CalculatedIn, max_length=3)),
                ('required_value', models.PositiveIntegerField()),
                ('level', enumfields.fields.EnumField(enum=training.enums.TrainingLevel, max_length=3)),
                ('order', models.PositiveIntegerField(help_text='to show the order of each exersice in a training set')),
                ('status', enumfields.fields.EnumField(enum=training.enums.TrainingStatus, max_length=3)),
                ('belong_to_custom_training_set', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='training.customtrainingset')),
                ('exercise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='training.exercise')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
